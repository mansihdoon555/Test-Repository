@* @model IEnumerable<_729solutions.Web.Models.User> *@

@using PagedList;
@using PagedList.Mvc;
@model IPagedList<_729solutions.Web.Models.User>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>User</h2>

<p>
    @*@Html.ActionLink("Create New", "Create")*@
</p>

@* Html.BeginForm is used to add a form in an Html document *@
@* Pass the action name in the first parameter, controller name in the second parameter and specify the form request type as get *@

@using (Html.BeginForm("Index", "User", FormMethod.Get))
{
    //the following are search options

    <b> Search Option: </b>
    @Html.RadioButton("option", "FirstName") <text>First Name</text>
    @Html.RadioButton("option", "LastName") <text> Last Name </text>
    @Html.TextBox("search")
    <input type = "submit" name = "submit" value = "Search" />
}

<table class="table">
    <tr class="tablehead">
        <th>
            @*@Html.DisplayNameFor(model => model.First().Id)*@
            @Html.ActionLink("Id","Index",new { sort = ViewBag.SortById, option = Request.QueryString["option"], search = Request.QueryString["search"] })
        </th>
        <th>
            @Html.ActionLink("Email","Index",new { sort = ViewBag.SortByEmail, option = Request.QueryString["option"], search = Request.QueryString["search"] })
        </th>
        <th>
            @Html.ActionLink("First Name", "Index", new { sort = ViewBag.SortByFirstName, option = Request.QueryString["option"], search = Request.QueryString["search"] })
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sort = ViewBag.SortByLastName, option = Request.QueryString["option"], search = Request.QueryString["search"] })
        </th>
        <th>
            @Html.ActionLink("User Name","Index",new { sort = ViewBag.SortByUserName, option = Request.QueryString["option"], search = Request.QueryString["search"] })
        </th>
    </tr>

@foreach (var item in Model)
{
        if (Model.Count() == 0)
        {
        <tr> <td colspan = "4"> Records not found </td></tr>
        }
        else
        {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.Id)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.Email)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.FirstName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.LastName)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.UserName)
        </td>
        <!--
        <td>
            @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
            @Html.ActionLink("Details", "Details", new { id = item.Id }) |
            @Html.ActionLink("Delete", "Delete", new { id = item.Id })
        </td>
        -->
    </tr>
        }
    }

</table>


Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber)/@Model.PageCount
<div>
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page = page,
    option = Request.QueryString["option"],
    search = Request.QueryString["search"],
    sort = Request.QueryString["sort"]
}))
</div>
